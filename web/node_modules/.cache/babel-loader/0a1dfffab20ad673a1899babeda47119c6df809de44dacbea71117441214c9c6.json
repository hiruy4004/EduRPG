{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\New folder\\\\web\\\\src\\\\components\\\\Combat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport '../styles/Combat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Combat() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [playerHealth, setPlayerHealth] = useState(100);\n  const [enemyHealth, setEnemyHealth] = useState(0);\n  const [currentEnemy, setCurrentEnemy] = useState({});\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [answer, setAnswer] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [showDamage, setShowDamage] = useState(false);\n  const [damageAmount, setDamageAmount] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [level, setLevel] = useState(1);\n\n  // Sample data for enemies with enhanced properties\n  const enemies = useMemo(() => [{\n    id: 1,\n    name: 'Math Monster',\n    image: '👾',\n    type: 'math',\n    health: 100,\n    difficulty: 'easy',\n    specialAbility: 'Doubles damage every third attack'\n  }, {\n    id: 2,\n    name: 'Science Sorcerer',\n    image: '🧪',\n    type: 'science',\n    health: 120,\n    difficulty: 'medium',\n    specialAbility: 'Heals 10% health on successful defense'\n  }, {\n    id: 3,\n    name: 'History Hydra',\n    image: '🐉',\n    type: 'history',\n    health: 150,\n    difficulty: 'hard',\n    specialAbility: 'Grows stronger with each defeat'\n  }], []);\n\n  // Enhanced questions with more variety\n  const questions = useMemo(() => [{\n    id: 1,\n    text: 'What is 2 + 2?',\n    correctAnswer: '4',\n    difficulty: 'easy',\n    type: 'math',\n    points: 100\n  }, {\n    id: 2,\n    text: 'What is the chemical symbol for water?',\n    correctAnswer: 'H2O',\n    difficulty: 'medium',\n    type: 'science',\n    points: 200\n  }, {\n    id: 3,\n    text: 'Who was the first president of the United States?',\n    correctAnswer: 'George Washington',\n    difficulty: 'hard',\n    type: 'history',\n    points: 300\n  }], []);\n  useEffect(() => {\n    initializeCombat();\n  }, [enemies, questions]);\n  const initializeCombat = () => {\n    const randomEnemy = enemies[Math.floor(Math.random() * enemies.length)];\n    const randomQuestion = getQuestionByType(randomEnemy.type);\n    setCurrentEnemy(randomEnemy);\n    setCurrentQuestion(randomQuestion);\n    setEnemyHealth(randomEnemy.health);\n    setLoading(false);\n    setGameOver(false);\n    setPlayerHealth(100);\n    setStreak(0);\n    setScore(0);\n    setLevel(1);\n  };\n  const getQuestionByType = type => {\n    const typeQuestions = questions.filter(q => q.type === type);\n    return typeQuestions[Math.floor(Math.random() * typeQuestions.length)] || questions[0];\n  };\n  const calculateDamage = (difficulty, currentStreak) => {\n    let baseDamage = {\n      'easy': 15,\n      'medium': 25,\n      'hard': 40\n    }[difficulty] || 20;\n\n    // Bonus damage for streak\n    const streakBonus = Math.floor(currentStreak / 3) * 5;\n    // Level bonus\n    const levelBonus = (level - 1) * 2;\n    return baseDamage + streakBonus + levelBonus;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (gameOver) {\n      initializeCombat();\n      return;\n    }\n    const isCorrect = answer.toLowerCase() === currentQuestion.correctAnswer.toLowerCase();\n    if (isCorrect) {\n      handleCorrectAnswer();\n    } else {\n      handleIncorrectAnswer();\n    }\n\n    // Get a new question of the same type as the current enemy\n    const newQuestion = getQuestionByType(currentEnemy.type);\n    setCurrentQuestion(newQuestion);\n    setAnswer('');\n  };\n  const handleCorrectAnswer = () => {\n    const newStreak = streak + 1;\n    setStreak(newStreak);\n    const damage = calculateDamage(currentQuestion.difficulty, newStreak);\n    const newEnemyHealth = Math.max(0, enemyHealth - damage);\n\n    // Show damage animation\n    setDamageAmount(damage);\n    setShowDamage(true);\n    setTimeout(() => setShowDamage(false), 1000);\n    setEnemyHealth(newEnemyHealth);\n    setScore(score + currentQuestion.points * (1 + streak * 0.1));\n    setMessage(`Streak x${newStreak}! You dealt ${damage} damage to ${currentEnemy.name}.`);\n    setMessageType('success');\n    if (newEnemyHealth <= 0) {\n      handleEnemyDefeat();\n    }\n  };\n  const handleIncorrectAnswer = () => {\n    setStreak(0);\n    const damage = 10 + Math.floor(level * 1.5); // Increased damage with level\n    const newPlayerHealth = Math.max(0, playerHealth - damage);\n    setPlayerHealth(newPlayerHealth);\n    setMessage(`Incorrect! The answer was \"${currentQuestion.correctAnswer}\". ${currentEnemy.name} dealt ${damage} damage to you.`);\n    setMessageType('error');\n    if (newPlayerHealth <= 0) {\n      handleGameOver();\n    }\n  };\n  const handleEnemyDefeat = () => {\n    const newLevel = level + 1;\n    setLevel(newLevel);\n    setMessage(`Victory! You defeated ${currentEnemy.name}! Level Up! (Level ${newLevel})`);\n    setTimeout(() => {\n      // Get a new enemy with increased difficulty\n      const newEnemy = {\n        ...enemies[Math.floor(Math.random() * enemies.length)],\n        health: Math.floor(150 * (1 + (newLevel - 1) * 0.2)) // Health scales with level\n      };\n      setCurrentEnemy(newEnemy);\n      setEnemyHealth(newEnemy.health);\n      // Heal player a bit after victory\n      setPlayerHealth(Math.min(100, playerHealth + 20));\n    }, 2000);\n  };\n  const handleGameOver = () => {\n    setGameOver(true);\n    setMessage(`Game Over! Final Score: ${Math.floor(score)} | Level Reached: ${level}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Preparing for battle...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"combat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"combat-title\",\n        children: \"Combat Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combat-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [\"Level: \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [\"Score: \", Math.floor(score)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [\"Streak: \", streak]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `combat-area card ${currentEnemy.type}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combat-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health-bars\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar player-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-label\",\n              children: \"Player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-outer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"health-inner player-health\",\n                style: {\n                  width: `${playerHealth}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-text\",\n              children: [playerHealth, \"/100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar enemy-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-label\",\n              children: currentEnemy.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-outer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"health-inner enemy-health\",\n                style: {\n                  width: `${enemyHealth / currentEnemy.health * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-text\",\n              children: [enemyHealth, \"/\", currentEnemy.health]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${messageType}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-scene\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-sprite\",\n          children: \"\\uD83E\\uDDD9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-arena\",\n          children: showDamage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"damage-indicator\",\n            children: [\"-\", damageAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enemy-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `enemy-sprite ${showDamage ? 'hit' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"enemy-emoji\",\n              children: currentEnemy.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"enemy-ability\",\n            children: currentEnemy.specialAbility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: currentQuestion.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `difficulty-${currentQuestion.difficulty}`,\n              children: currentQuestion.difficulty.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-points\",\n              children: [\"+\", currentQuestion.points, \" pts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"answer-form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: answer,\n              onChange: e => setAnswer(e.target.value),\n              placeholder: \"Enter your answer\",\n              className: \"answer-input\",\n              autoFocus: true,\n              disabled: gameOver\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: `attack-btn btn ${gameOver ? 'restart' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-text\",\n                children: gameOver ? 'Play Again' : 'Attack!'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-icon\",\n                children: gameOver ? '🔄' : '⚔️'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(Combat, \"ofwzQmMh2cl88KcR3X7uAeVh3C4=\");\n_c = Combat;\nexport default Combat;\nvar _c;\n$RefreshReg$(_c, \"Combat\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","Combat","_s","loading","setLoading","playerHealth","setPlayerHealth","enemyHealth","setEnemyHealth","currentEnemy","setCurrentEnemy","currentQuestion","setCurrentQuestion","answer","setAnswer","message","setMessage","messageType","setMessageType","showDamage","setShowDamage","damageAmount","setDamageAmount","streak","setStreak","score","setScore","gameOver","setGameOver","level","setLevel","enemies","id","name","image","type","health","difficulty","specialAbility","questions","text","correctAnswer","points","initializeCombat","randomEnemy","Math","floor","random","length","randomQuestion","getQuestionByType","typeQuestions","filter","q","calculateDamage","currentStreak","baseDamage","streakBonus","levelBonus","handleSubmit","e","preventDefault","isCorrect","toLowerCase","handleCorrectAnswer","handleIncorrectAnswer","newQuestion","newStreak","damage","newEnemyHealth","max","setTimeout","handleEnemyDefeat","newPlayerHealth","handleGameOver","newLevel","newEnemy","min","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","toUpperCase","onSubmit","value","onChange","target","placeholder","autoFocus","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/New folder/web/src/components/Combat.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport '../styles/Combat.css';\r\n\r\nfunction Combat() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [playerHealth, setPlayerHealth] = useState(100);\r\n  const [enemyHealth, setEnemyHealth] = useState(0);\r\n  const [currentEnemy, setCurrentEnemy] = useState({});\r\n  const [currentQuestion, setCurrentQuestion] = useState({});\r\n  const [answer, setAnswer] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [showDamage, setShowDamage] = useState(false);\r\n  const [damageAmount, setDamageAmount] = useState(0);\r\n  const [streak, setStreak] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [level, setLevel] = useState(1);\r\n  \r\n  // Sample data for enemies with enhanced properties\r\n  const enemies = useMemo(() => [\r\n    { \r\n      id: 1, \r\n      name: 'Math Monster', \r\n      image: '👾', \r\n      type: 'math', \r\n      health: 100, \r\n      difficulty: 'easy',\r\n      specialAbility: 'Doubles damage every third attack'\r\n    },\r\n    { \r\n      id: 2, \r\n      name: 'Science Sorcerer', \r\n      image: '🧪', \r\n      type: 'science', \r\n      health: 120, \r\n      difficulty: 'medium',\r\n      specialAbility: 'Heals 10% health on successful defense'\r\n    },\r\n    { \r\n      id: 3, \r\n      name: 'History Hydra', \r\n      image: '🐉', \r\n      type: 'history', \r\n      health: 150, \r\n      difficulty: 'hard',\r\n      specialAbility: 'Grows stronger with each defeat'\r\n    }\r\n  ], []);\r\n  \r\n  // Enhanced questions with more variety\r\n  const questions = useMemo(() => [\r\n    {\r\n      id: 1,\r\n      text: 'What is 2 + 2?',\r\n      correctAnswer: '4',\r\n      difficulty: 'easy',\r\n      type: 'math',\r\n      points: 100\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'What is the chemical symbol for water?',\r\n      correctAnswer: 'H2O',\r\n      difficulty: 'medium',\r\n      type: 'science',\r\n      points: 200\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'Who was the first president of the United States?',\r\n      correctAnswer: 'George Washington',\r\n      difficulty: 'hard',\r\n      type: 'history',\r\n      points: 300\r\n    }\r\n  ], []);\r\n  \r\n  useEffect(() => {\r\n    initializeCombat();\r\n  }, [enemies, questions]);\r\n\r\n  const initializeCombat = () => {\r\n    const randomEnemy = enemies[Math.floor(Math.random() * enemies.length)];\r\n    const randomQuestion = getQuestionByType(randomEnemy.type);\r\n    \r\n    setCurrentEnemy(randomEnemy);\r\n    setCurrentQuestion(randomQuestion);\r\n    setEnemyHealth(randomEnemy.health);\r\n    setLoading(false);\r\n    setGameOver(false);\r\n    setPlayerHealth(100);\r\n    setStreak(0);\r\n    setScore(0);\r\n    setLevel(1);\r\n  };\r\n\r\n  const getQuestionByType = (type) => {\r\n    const typeQuestions = questions.filter(q => q.type === type);\r\n    return typeQuestions[Math.floor(Math.random() * typeQuestions.length)] || questions[0];\r\n  };\r\n\r\n  const calculateDamage = (difficulty, currentStreak) => {\r\n    let baseDamage = {\r\n      'easy': 15,\r\n      'medium': 25,\r\n      'hard': 40\r\n    }[difficulty] || 20;\r\n\r\n    // Bonus damage for streak\r\n    const streakBonus = Math.floor(currentStreak / 3) * 5;\r\n    // Level bonus\r\n    const levelBonus = (level - 1) * 2;\r\n\r\n    return baseDamage + streakBonus + levelBonus;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (gameOver) {\r\n      initializeCombat();\r\n      return;\r\n    }\r\n\r\n    const isCorrect = answer.toLowerCase() === currentQuestion.correctAnswer.toLowerCase();\r\n    \r\n    if (isCorrect) {\r\n      handleCorrectAnswer();\r\n    } else {\r\n      handleIncorrectAnswer();\r\n    }\r\n\r\n    // Get a new question of the same type as the current enemy\r\n    const newQuestion = getQuestionByType(currentEnemy.type);\r\n    setCurrentQuestion(newQuestion);\r\n    setAnswer('');\r\n  };\r\n\r\n  const handleCorrectAnswer = () => {\r\n    const newStreak = streak + 1;\r\n    setStreak(newStreak);\r\n    \r\n    const damage = calculateDamage(currentQuestion.difficulty, newStreak);\r\n    const newEnemyHealth = Math.max(0, enemyHealth - damage);\r\n    \r\n    // Show damage animation\r\n    setDamageAmount(damage);\r\n    setShowDamage(true);\r\n    setTimeout(() => setShowDamage(false), 1000);\r\n    \r\n    setEnemyHealth(newEnemyHealth);\r\n    setScore(score + currentQuestion.points * (1 + streak * 0.1));\r\n    setMessage(`Streak x${newStreak}! You dealt ${damage} damage to ${currentEnemy.name}.`);\r\n    setMessageType('success');\r\n    \r\n    if (newEnemyHealth <= 0) {\r\n      handleEnemyDefeat();\r\n    }\r\n  };\r\n\r\n  const handleIncorrectAnswer = () => {\r\n    setStreak(0);\r\n    const damage = 10 + Math.floor(level * 1.5); // Increased damage with level\r\n    const newPlayerHealth = Math.max(0, playerHealth - damage);\r\n    \r\n    setPlayerHealth(newPlayerHealth);\r\n    setMessage(`Incorrect! The answer was \"${currentQuestion.correctAnswer}\". ${currentEnemy.name} dealt ${damage} damage to you.`);\r\n    setMessageType('error');\r\n    \r\n    if (newPlayerHealth <= 0) {\r\n      handleGameOver();\r\n    }\r\n  };\r\n\r\n  const handleEnemyDefeat = () => {\r\n    const newLevel = level + 1;\r\n    setLevel(newLevel);\r\n    setMessage(`Victory! You defeated ${currentEnemy.name}! Level Up! (Level ${newLevel})`);\r\n    \r\n    setTimeout(() => {\r\n      // Get a new enemy with increased difficulty\r\n      const newEnemy = {\r\n        ...enemies[Math.floor(Math.random() * enemies.length)],\r\n        health: Math.floor(150 * (1 + (newLevel - 1) * 0.2)) // Health scales with level\r\n      };\r\n      setCurrentEnemy(newEnemy);\r\n      setEnemyHealth(newEnemy.health);\r\n      // Heal player a bit after victory\r\n      setPlayerHealth(Math.min(100, playerHealth + 20));\r\n    }, 2000);\r\n  };\r\n\r\n  const handleGameOver = () => {\r\n    setGameOver(true);\r\n    setMessage(`Game Over! Final Score: ${Math.floor(score)} | Level Reached: ${level}`);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Preparing for battle...</p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"combat-container\">\r\n      <div className=\"combat-header\">\r\n        <h1 className=\"combat-title\">Combat Challenge</h1>\r\n        <div className=\"combat-stats\">\r\n          <div className=\"stat\">Level: {level}</div>\r\n          <div className=\"stat\">Score: {Math.floor(score)}</div>\r\n          <div className=\"stat\">Streak: {streak}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={`combat-area card ${currentEnemy.type}`}>\r\n        <div className=\"combat-status\">\r\n          <div className=\"health-bars\">\r\n            <div className=\"health-bar player-bar\">\r\n              <div className=\"health-label\">Player</div>\r\n              <div className=\"health-outer\">\r\n                <div \r\n                  className=\"health-inner player-health\" \r\n                  style={{ width: `${playerHealth}%` }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"health-text\">{playerHealth}/100</div>\r\n            </div>\r\n            \r\n            <div className=\"health-bar enemy-bar\">\r\n              <div className=\"health-label\">{currentEnemy.name}</div>\r\n              <div className=\"health-outer\">\r\n                <div \r\n                  className=\"health-inner enemy-health\" \r\n                  style={{ width: `${(enemyHealth / currentEnemy.health) * 100}%` }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"health-text\">{enemyHealth}/{currentEnemy.health}</div>\r\n            </div>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className={`message ${messageType}`}>{message}</div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"battle-scene\">\r\n          <div className=\"player-sprite\">🧙</div>\r\n          \r\n          <div className=\"battle-arena\">\r\n            {showDamage && (\r\n              <div className=\"damage-indicator\">-{damageAmount}</div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"enemy-container\">\r\n            <div className={`enemy-sprite ${showDamage ? 'hit' : ''}`}>\r\n              <span className=\"enemy-emoji\">{currentEnemy.image}</span>\r\n            </div>\r\n            <div className=\"enemy-ability\">{currentEnemy.specialAbility}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"question-container\">\r\n          <div className=\"question-card\">\r\n            <div className=\"question-text\">{currentQuestion.text}</div>\r\n            <div className=\"question-info\">\r\n              <span className={`difficulty-${currentQuestion.difficulty}`}>\r\n                {currentQuestion.difficulty.toUpperCase()}\r\n              </span>\r\n              <span className=\"question-points\">+{currentQuestion.points} pts</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <form onSubmit={handleSubmit} className=\"answer-form\">\r\n            <div className=\"input-group\">\r\n              <input \r\n                type=\"text\" \r\n                value={answer} \r\n                onChange={(e) => setAnswer(e.target.value)} \r\n                placeholder=\"Enter your answer\"\r\n                className=\"answer-input\"\r\n                autoFocus\r\n                disabled={gameOver}\r\n              />\r\n              <button \r\n                type=\"submit\" \r\n                className={`attack-btn btn ${gameOver ? 'restart' : ''}`}\r\n              >\r\n                <span className=\"btn-text\">\r\n                  {gameOver ? 'Play Again' : 'Attack!'}\r\n                </span>\r\n                <span className=\"btn-icon\">{gameOver ? '🔄' : '⚔️'}</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Combat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}