{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\New folder\\\\web\\\\src\\\\components\\\\Combat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Combat.css';\nimport { getQuestionsByDifficulty } from '../supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandom(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\n// Unique races and powerful bosses\nconst RACES = [{\n  name: 'Drakonid',\n  emoji: '🐲',\n  boss: {\n    name: 'Tyrant Varkos',\n    emoji: '🐉',\n    hp: 600,\n    dps: 75\n  }\n}, {\n  name: 'Celestian',\n  emoji: '👼',\n  boss: {\n    name: 'Archangel Seraphiel',\n    emoji: '🕊️',\n    hp: 700,\n    dps: 90\n  }\n}, {\n  name: 'Netherkin',\n  emoji: '👹',\n  boss: {\n    name: 'Dreadlord Malphas',\n    emoji: '🔥',\n    hp: 800,\n    dps: 100\n  }\n}, {\n  name: 'Synthian',\n  emoji: '🤖',\n  boss: {\n    name: 'Prime Unit X-99',\n    emoji: '🛸',\n    hp: 900,\n    dps: 200\n  }\n}];\nfunction Combat() {\n  _s();\n  // Question pools state\n  const [questionPools, setQuestionPools] = useState({\n    easy: [],\n    medium: [],\n    hard: []\n  });\n\n  // Load questions on component mount\n  useEffect(() => {\n    async function loadQuestions() {\n      const easyQuestions = await getQuestionsByDifficulty('easy');\n      const mediumQuestions = await getQuestionsByDifficulty('medium');\n      const hardQuestions = await getQuestionsByDifficulty('hard');\n      setQuestionPools({\n        easy: easyQuestions,\n        medium: mediumQuestions,\n        hard: hardQuestions\n      });\n    }\n    loadQuestions();\n  }, []);\n\n  // Replace static QUESTION_POOLS with dynamic questionPools state\n  function getQuestionByDifficulty(difficulty) {\n    const pool = questionPools[difficulty];\n    if (!pool || pool.length === 0) return null;\n    return getRandom(pool);\n  }\n\n  // Start new battle\n  function startBattle() {\n    const diff = getDifficulty();\n    const q = getQuestionByDifficulty(diff);\n    if (!q) {\n      setLoading(true);\n      return;\n    }\n    generateEnemy();\n    setQuestion(q);\n    setPlayerHealth(100 + (playerLevel - 1) * 10 + (levelPointsHp * 10 || 0));\n    setMessage(\"\");\n    setAnswer(\"\");\n    setLoading(false);\n    setGameOver(false);\n\n    // Timer logic based on difficulty\n    let baseTime = diff === 'easy' ? 30 : diff === 'medium' ? 40 : 50;\n    setTimeLeft(baseTime);\n    if (timer) clearInterval(timer);\n    const interval = setInterval(() => {\n      setTimeLeft(prev => {\n        if (gameOver) {\n          clearInterval(interval);\n          return prev;\n        }\n        if (prev <= 1) {\n          clearInterval(interval);\n          const damage = enemyDps;\n          const newPlayerHealth = Math.max(0, playerHealth - damage);\n          setPlayerHealth(newPlayerHealth);\n          setMessage(\"Time's up! You took \" + damage + \" damage.\");\n          if (newPlayerHealth <= 0) {\n            setGameOver(true);\n            setMessage('Game Over! Final Score: ' + score + ' | Level: ' + playerLevel);\n          } else {\n            startBattle();\n          }\n          return 0;\n        }\n        return prev - 0.05;\n      });\n    }, 200);\n    setTimer(interval);\n  }\n\n  // Player state\n  const [playerLevel, setPlayerLevel] = useState(1);\n  const [playerExp, setPlayerExp] = useState(0);\n  const [expToNext, setExpToNext] = useState(100);\n  const [playerHealth, setPlayerHealth] = useState(100);\n  const [playerAttack, setPlayerAttack] = useState(40);\n  const [levelPoints, setLevelPoints] = useState(0);\n\n  // Progression state\n  const [floor, setFloor] = useState(1);\n  const [opponentCount, setOpponentCount] = useState(1);\n  const [defeatedTotal, setDefeatedTotal] = useState(0);\n\n  // Enemy state\n  const [enemy, setEnemy] = useState({});\n  const [enemyHealth, setEnemyHealth] = useState(0);\n  const [enemyDps, setEnemyDps] = useState(20);\n  const [isBoss, setIsBoss] = useState(false);\n\n  // Question state\n  const [question, setQuestion] = useState({});\n  const [answer, setAnswer] = useState('');\n\n  // UI/game state\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [showPointAlloc, setShowPointAlloc] = useState(false);\n  const [traits, setTraits] = useState([]); // New: special traits\n  const [timer, setTimer] = useState(null); // New: timer for questions\n  const [timeLeft, setTimeLeft] = useState(0); // New: time left for answer\n\n  // Calculate current race\n  const currentRaceIdx = Math.floor((floor - 1) % RACES.length);\n  const currentRace = RACES[currentRaceIdx];\n\n  // Difficulty scaling\n  function getDifficulty() {\n    if (floor < 3) return 'easy';\n    if (floor < 6) return opponentCount < 8 ? 'medium' : 'hard';\n    return opponentCount < 7 ? 'medium' : 'hard';\n  }\n\n  // Enemy generator\n  function generateEnemy() {\n    const boss = opponentCount % 10 === 0;\n    setIsBoss(boss);\n    if (boss) {\n      setEnemy({\n        name: currentRace.boss.name,\n        emoji: currentRace.boss.emoji,\n        health: currentRace.boss.hp + floor * 40,\n        flavor: `Boss of Floor ${floor}: ${currentRace.name}`\n      });\n      setEnemyHealth(currentRace.boss.hp + floor * 40);\n      setEnemyDps(currentRace.boss.dps + floor * 5);\n    } else {\n      setEnemy({\n        name: `${currentRace.name} Opponent #${opponentCount}`,\n        emoji: currentRace.emoji,\n        health: 80 + floor * 18,\n        flavor: `A challenger from the ${currentRace.name} race.`\n      });\n      setEnemyHealth(80 + floor * 18);\n      setEnemyDps(20 + floor * 3);\n    }\n  }\n\n  // Question generator\n  function generateQuestion() {\n    if (gameOver) return; // Don't generate new questions if game is over\n    const diff = getDifficulty();\n    const q = getQuestionByDifficulty(diff);\n    setQuestion(q);\n    // Timer logic based on difficulty only\n    let baseTime = diff === 'easy' ? 30 : diff === 'medium' ? 40 : 50;\n    setTimeLeft(baseTime);\n    if (timer) clearInterval(timer);\n    const interval = setInterval(() => {\n      setTimeLeft(prev => {\n        if (gameOver) {\n          // Stop timer if game is over\n          clearInterval(interval);\n          return prev;\n        }\n        if (prev <= 1) {\n          clearInterval(interval);\n          const damage = enemyDps;\n          const newPlayerHealth = Math.max(0, playerHealth - damage);\n          setPlayerHealth(newPlayerHealth);\n          setMessage(\"Time's up! You took \" + damage + \" damage.\");\n          if (newPlayerHealth <= 0) {\n            setGameOver(true);\n            setMessage('Game Over! Final Score: ' + score + ' | Level: ' + playerLevel);\n          } else {\n            generateQuestion();\n          }\n          return 0;\n        }\n        return prev - 0.05; // Slower countdown\n      });\n    }, 200); // Update less frequently for slower countdown\n    setTimer(interval);\n  }\n\n  // Track point allocation\n  const [levelPointsHp, setLevelPointsHp] = useState(0);\n  const [levelPointsAtk, setLevelPointsAtk] = useState(0);\n\n  // On mount and when floor/opponent changes\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(startBattle, 500);\n    // eslint-disable-next-line\n  }, [floor, opponentCount]);\n\n  // Handle timeout for question\n  function handleTimeout() {\n    if (!gameOver && timeLeft === 0) {\n      const damage = enemyDps;\n      const newPlayerHealth = Math.max(0, playerHealth - damage);\n      setPlayerHealth(newPlayerHealth);\n      setMessage(\"Time's up! You took \" + damage + \" damage.\");\n      if (newPlayerHealth <= 0) {\n        setGameOver(true);\n        setMessage('Game Over! Final Score: ' + score + ' | Level: ' + playerLevel);\n      } else {\n        generateQuestion();\n      }\n    }\n  }\n\n  // Handle answer submission\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (timer) clearInterval(timer);\n    if (gameOver) {\n      // Reset game state on respawn\n      setOpponentCount(1);\n      setPlayerHealth(100 + (playerLevel - 1) * 10 + (levelPointsHp * 10 || 0));\n      setGameOver(false);\n      setLoading(true);\n      setMessage('Restarted at the beginning of Floor ' + floor + '.');\n      setTimeout(startBattle, 500);\n      return;\n    }\n    if (answer.trim().toLowerCase() === question.answer.toLowerCase()) {\n      // Correct: damage enemy\n      const damage = isBoss ? playerAttack + (levelPointsAtk * 5 || 0) : playerAttack + (levelPointsAtk * 5 || 0);\n      const newEnemyHealth = Math.max(0, enemyHealth - damage);\n      setEnemyHealth(newEnemyHealth);\n      setMessage('Correct! You dealt ' + damage + ' damage.');\n      setScore(score + question.points);\n      if (newEnemyHealth <= 0) {\n        let expGain = isBoss ? 150 : 70;\n        setPlayerExp(prev => prev + expGain);\n        setDefeatedTotal(prev => prev + 1);\n        if (opponentCount % 10 === 0) {\n          setFloor(floor + 1);\n          setOpponentCount(1);\n        } else {\n          setOpponentCount(opponentCount + 1);\n        }\n      } else {\n        startBattle();\n      }\n    } else {\n      // Incorrect: damage player\n      const damage = enemyDps;\n      const newPlayerHealth = Math.max(0, playerHealth - damage);\n      setPlayerHealth(newPlayerHealth);\n      setMessage('Wrong! You took ' + damage + ' damage.');\n      if (newPlayerHealth <= 0) {\n        setGameOver(true);\n        setMessage('Game Over! Final Score: ' + score + ' | Level: ' + playerLevel);\n      }\n    }\n    setAnswer('');\n  }\n\n  // Level up logic and point allocation\n  useEffect(() => {\n    if (playerExp >= expToNext) {\n      setPlayerLevel(playerLevel + 1);\n      setPlayerExp(playerExp - expToNext);\n      setExpToNext(Math.floor(expToNext * 1.35));\n      setLevelPoints(prev => prev + 2);\n      setShowPointAlloc(true);\n      // Add trait every 10 levels\n      if ((playerLevel + 1) % 10 === 0) {\n        const traitList = ['Regeneration: Heal 10 HP after each battle', 'Critical Strike: +10 Attack vs Bosses', 'Shield: Take 10 less damage from enemies', 'Quick Learner: +20% EXP gain', 'Lucky: 10% chance to avoid damage', 'Resilience: Survive with 1 HP once per floor', 'Focus: +5 seconds to answer timer', 'Power Surge: +20 Attack for next 3 battles'];\n        const newTrait = traitList[Math.floor(Math.random() * traitList.length)];\n        setTraits(prev => [...prev, newTrait]);\n        setMessage('Special Trait Unlocked: ' + newTrait);\n      }\n    }\n    // eslint-disable-next-line\n  }, [playerExp]);\n  function allocatePoint(stat) {\n    if (levelPoints > 0) {\n      if (stat === 'hp') {\n        setLevelPointsHp(prev => prev + 1);\n      } else if (stat === 'atk') {\n        setLevelPointsAtk(prev => prev + 1);\n        setPlayerAttack(prev => prev + 5);\n      }\n      setLevelPoints(prev => prev - 1);\n      if (levelPoints - 1 === 0) setShowPointAlloc(false);\n    }\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combat-new-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combat-new-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading new battle...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"combat-new-root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combat-new-main-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combat-new-enemy-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combat-new-enemy-img\",\n          children: enemy.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combat-new-enemy-name\",\n          children: enemy.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combat-new-enemy-flavor\",\n          children: enemy.flavor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combat-new-health-bar enemy\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"combat-new-health-inner\",\n            style: {\n              width: `${enemyHealth / (enemy.health || 1) * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [enemyHealth, \" / \", enemy.health]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combat-new-vs\",\n        children: \"VS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combat-new-player-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combat-new-player-img\",\n          children: \"\\uD83E\\uDDD1\\u200D\\uD83C\\uDF93\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combat-new-player-label\",\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combat-new-health-bar player\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"combat-new-health-inner\",\n            style: {\n              width: `${playerHealth}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [playerHealth, \" / \", 100 + (playerLevel - 1) * 10 + (levelPointsHp * 10 || 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '0.7rem',\n            fontWeight: 600,\n            color: '#1b6ca8'\n          },\n          children: [\"Level \", playerLevel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            background: '#e0e0e0',\n            borderRadius: '1rem',\n            height: '0.8rem',\n            marginTop: '0.3rem',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '100%',\n              borderRadius: '1rem',\n              background: 'linear-gradient(90deg,#6c63ff,#43cea2)',\n              width: `${playerExp / expToNext * 100}%`,\n              transition: 'width 0.5s'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: 'absolute',\n              right: '0.7rem',\n              top: '-1.1rem',\n              fontSize: '0.85rem',\n              color: '#333'\n            },\n            children: [\"EXP: \", playerExp, \" / \", expToNext]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '0.5rem',\n            fontWeight: 500\n          },\n          children: [\"Attack: \", playerAttack + (levelPointsAtk * 5 || 0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '0.2rem',\n            fontWeight: 500\n          },\n          children: [\"Unspent Points: \", levelPoints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), traits.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '0.5rem',\n            fontWeight: 500,\n            color: '#7c3aed'\n          },\n          children: [\"Traits: \", traits.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), showPointAlloc && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combat-new-point-alloc\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Level Up! Allocate your points:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => allocatePoint('hp'),\n        disabled: levelPoints === 0,\n        children: \"+10 Max HP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => allocatePoint('atk'),\n        disabled: levelPoints === 0,\n        children: \"+5 Attack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combat-new-question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combat-new-question\",\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.9rem',\n          color: '#e53e3e',\n          marginBottom: '0.3rem'\n        },\n        children: timeLeft > 0 ? `Time left: ${Math.ceil(timeLeft)}s` : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"combat-new-answer-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"combat-new-answer-input\",\n          type: \"text\",\n          value: answer,\n          onChange: e => setAnswer(e.target.value),\n          placeholder: \"Type your answer...\",\n          disabled: gameOver,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"combat-new-action-btn\",\n          type: \"submit\",\n          disabled: gameOver && !loading,\n          children: gameOver ? 'Restart' : isBoss ? 'Fight Boss' : 'Attack'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combat-new-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combat-new-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Floor: \", floor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Defeated: \", defeatedTotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n}\n_s(Combat, \"hzzZPL0wAUNsZEA4cLdPWJ4PNEs=\");\n_c = Combat;\nexport default Combat;\nvar _c;\n$RefreshReg$(_c, \"Combat\");","map":{"version":3,"names":["React","useState","useEffect","getQuestionsByDifficulty","jsxDEV","_jsxDEV","getRandom","arr","Math","floor","random","length","RACES","name","emoji","boss","hp","dps","Combat","_s","questionPools","setQuestionPools","easy","medium","hard","loadQuestions","easyQuestions","mediumQuestions","hardQuestions","getQuestionByDifficulty","difficulty","pool","startBattle","diff","getDifficulty","q","setLoading","generateEnemy","setQuestion","setPlayerHealth","playerLevel","levelPointsHp","setMessage","setAnswer","setGameOver","baseTime","setTimeLeft","timer","clearInterval","interval","setInterval","prev","gameOver","damage","enemyDps","newPlayerHealth","max","playerHealth","score","setTimer","setPlayerLevel","playerExp","setPlayerExp","expToNext","setExpToNext","playerAttack","setPlayerAttack","levelPoints","setLevelPoints","setFloor","opponentCount","setOpponentCount","defeatedTotal","setDefeatedTotal","enemy","setEnemy","enemyHealth","setEnemyHealth","setEnemyDps","isBoss","setIsBoss","question","answer","loading","message","setScore","showPointAlloc","setShowPointAlloc","traits","setTraits","timeLeft","currentRaceIdx","currentRace","health","flavor","generateQuestion","setLevelPointsHp","levelPointsAtk","setLevelPointsAtk","setTimeout","handleTimeout","handleSubmit","e","preventDefault","trim","toLowerCase","newEnemyHealth","points","expGain","traitList","newTrait","allocatePoint","stat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","marginTop","fontWeight","color","background","borderRadius","height","position","transition","right","top","fontSize","join","onClick","disabled","text","marginBottom","ceil","onSubmit","type","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/New folder/web/src/components/Combat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Combat.css';\r\nimport { getQuestionsByDifficulty } from '../supabase';\r\n\r\nfunction getRandom(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\n// Unique races and powerful bosses\r\nconst RACES = [\r\n  { name: 'Drakonid', emoji: '🐲', boss: { name: 'Tyrant Varkos', emoji: '🐉', hp: 600, dps: 75 } },\r\n  { name: 'Celestian', emoji: '👼', boss: { name: 'Archangel Seraphiel', emoji: '🕊️', hp: 700, dps: 90 } },\r\n  { name: 'Netherkin', emoji: '👹', boss: { name: 'Dreadlord Malphas', emoji: '🔥', hp: 800, dps: 100 } },\r\n  { name: 'Synthian', emoji: '🤖', boss: { name: 'Prime Unit X-99', emoji: '🛸', hp: 900, dps: 200 } }\r\n];\r\n\r\n\r\nfunction Combat() {\r\n  // Question pools state\r\n  const [questionPools, setQuestionPools] = useState({\r\n    easy: [],\r\n    medium: [],\r\n    hard: []\r\n  });\r\n\r\n  // Load questions on component mount\r\n  useEffect(() => {\r\n    async function loadQuestions() {\r\n      const easyQuestions = await getQuestionsByDifficulty('easy');\r\n      const mediumQuestions = await getQuestionsByDifficulty('medium');\r\n      const hardQuestions = await getQuestionsByDifficulty('hard');\r\n      \r\n      setQuestionPools({\r\n        easy: easyQuestions,\r\n        medium: mediumQuestions,\r\n        hard: hardQuestions\r\n      });\r\n    }\r\n    \r\n    loadQuestions();\r\n  }, []);\r\n\r\n  // Replace static QUESTION_POOLS with dynamic questionPools state\r\n  function getQuestionByDifficulty(difficulty) {\r\n    const pool = questionPools[difficulty];\r\n    if (!pool || pool.length === 0) return null;\r\n    return getRandom(pool);\r\n  }\r\n\r\n  // Start new battle\r\n  function startBattle() {\r\n    const diff = getDifficulty();\r\n    const q = getQuestionByDifficulty(diff);\r\n    if (!q) {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    generateEnemy();\r\n    setQuestion(q);\r\n    setPlayerHealth(100 + (playerLevel - 1) * 10 + (levelPointsHp * 10 || 0));\r\n    setMessage(\"\");\r\n    setAnswer(\"\");\r\n    setLoading(false);\r\n    setGameOver(false);\r\n    \r\n    // Timer logic based on difficulty\r\n    let baseTime = diff === 'easy' ? 30 : diff === 'medium' ? 40 : 50;\r\n    setTimeLeft(baseTime);\r\n    if (timer) clearInterval(timer);\r\n    const interval = setInterval(() => {\r\n      setTimeLeft(prev => {\r\n        if (gameOver) {\r\n          clearInterval(interval);\r\n          return prev;\r\n        }\r\n        if (prev <= 1) {\r\n          clearInterval(interval);\r\n          const damage = enemyDps;\r\n          const newPlayerHealth = Math.max(0, playerHealth - damage);\r\n          setPlayerHealth(newPlayerHealth);\r\n          setMessage(\"Time's up! You took \" + damage + \" damage.\");\r\n          if (newPlayerHealth <= 0) {\r\n            setGameOver(true);\r\n            setMessage('Game Over! Final Score: ' + score + ' | Level: ' + playerLevel);\r\n          } else {\r\n            startBattle();\r\n          }\r\n          return 0;\r\n        }\r\n        return prev - 0.05;\r\n      });\r\n    }, 200);\r\n    setTimer(interval);\r\n  }\r\n\r\n  // Player state\r\n  const [playerLevel, setPlayerLevel] = useState(1);\r\n  const [playerExp, setPlayerExp] = useState(0);\r\n  const [expToNext, setExpToNext] = useState(100);\r\n  const [playerHealth, setPlayerHealth] = useState(100);\r\n  const [playerAttack, setPlayerAttack] = useState(40);\r\n  const [levelPoints, setLevelPoints] = useState(0);\r\n\r\n  // Progression state\r\n  const [floor, setFloor] = useState(1);\r\n  const [opponentCount, setOpponentCount] = useState(1);\r\n  const [defeatedTotal, setDefeatedTotal] = useState(0);\r\n\r\n  // Enemy state\r\n  const [enemy, setEnemy] = useState({});\r\n  const [enemyHealth, setEnemyHealth] = useState(0);\r\n  const [enemyDps, setEnemyDps] = useState(20);\r\n  const [isBoss, setIsBoss] = useState(false);\r\n\r\n  // Question state\r\n  const [question, setQuestion] = useState({});\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  // UI/game state\r\n  const [loading, setLoading] = useState(true);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [showPointAlloc, setShowPointAlloc] = useState(false);\r\n  const [traits, setTraits] = useState([]); // New: special traits\r\n  const [timer, setTimer] = useState(null); // New: timer for questions\r\n  const [timeLeft, setTimeLeft] = useState(0); // New: time left for answer\r\n\r\n  // Calculate current race\r\n  const currentRaceIdx = Math.floor((floor - 1) % RACES.length);\r\n  const currentRace = RACES[currentRaceIdx];\r\n\r\n  // Difficulty scaling\r\n  function getDifficulty() {\r\n    if (floor < 3) return 'easy';\r\n    if (floor < 6) return opponentCount < 8 ? 'medium' : 'hard';\r\n    return opponentCount < 7 ? 'medium' : 'hard';\r\n  }\r\n\r\n  // Enemy generator\r\n  function generateEnemy() {\r\n    const boss = opponentCount % 10 === 0;\r\n    setIsBoss(boss);\r\n    if (boss) {\r\n      setEnemy({\r\n        name: currentRace.boss.name,\r\n        emoji: currentRace.boss.emoji,\r\n        health: currentRace.boss.hp + floor * 40,\r\n        flavor: `Boss of Floor ${floor}: ${currentRace.name}`\r\n      });\r\n      setEnemyHealth(currentRace.boss.hp + floor * 40);\r\n      setEnemyDps(currentRace.boss.dps + floor * 5);\r\n    } else {\r\n      setEnemy({\r\n        name: `${currentRace.name} Opponent #${opponentCount}`,\r\n        emoji: currentRace.emoji,\r\n        health: 80 + floor * 18,\r\n        flavor: `A challenger from the ${currentRace.name} race.`\r\n      });\r\n      setEnemyHealth(80 + floor * 18);\r\n      setEnemyDps(20 + floor * 3);\r\n    }\r\n  }\r\n\r\n  // Question generator\r\n  function generateQuestion() {\r\n    if (gameOver) return; // Don't generate new questions if game is over\r\n    const diff = getDifficulty();\r\n    const q = getQuestionByDifficulty(diff);\r\n    setQuestion(q);\r\n    // Timer logic based on difficulty only\r\n    let baseTime = diff === 'easy' ? 30 : diff === 'medium' ? 40 : 50;\r\n    setTimeLeft(baseTime);\r\n    if (timer) clearInterval(timer);\r\n    const interval = setInterval(() => {\r\n      setTimeLeft(prev => {\r\n        if (gameOver) { // Stop timer if game is over\r\n          clearInterval(interval);\r\n          return prev;\r\n        }\r\n        if (prev <= 1) {\r\n          clearInterval(interval);\r\n          const damage = enemyDps;\r\n          const newPlayerHealth = Math.max(0, playerHealth - damage);\r\n          setPlayerHealth(newPlayerHealth);\r\n          setMessage(\"Time's up! You took \" + damage + \" damage.\");\r\n          if (newPlayerHealth <= 0) {\r\n            setGameOver(true);\r\n            setMessage('Game Over! Final Score: ' + score + ' | Level: ' + playerLevel);\r\n          } else {\r\n            generateQuestion();\r\n          }\r\n          return 0;\r\n        }\r\n        return prev - 0.05; // Slower countdown\r\n      });\r\n    }, 200); // Update less frequently for slower countdown\r\n    setTimer(interval);\r\n  }\r\n\r\n  // Track point allocation\r\n  const [levelPointsHp, setLevelPointsHp] = useState(0);\r\n  const [levelPointsAtk, setLevelPointsAtk] = useState(0);\r\n\r\n  // On mount and when floor/opponent changes\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(startBattle, 500);\r\n    // eslint-disable-next-line\r\n  }, [floor, opponentCount]);\r\n\r\n  // Handle timeout for question\r\n  function handleTimeout() {\r\n    if (!gameOver && timeLeft === 0) {\r\n      const damage = enemyDps;\r\n      const newPlayerHealth = Math.max(0, playerHealth - damage);\r\n      setPlayerHealth(newPlayerHealth);\r\n      setMessage(\"Time's up! You took \" + damage + \" damage.\");\r\n      if (newPlayerHealth <= 0) {\r\n        setGameOver(true);\r\n        setMessage('Game Over! Final Score: ' + score + ' | Level: ' + playerLevel);\r\n      } else {\r\n        generateQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle answer submission\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (timer) clearInterval(timer);\r\n    if (gameOver) {\r\n      // Reset game state on respawn\r\n      setOpponentCount(1);\r\n      setPlayerHealth(100 + (playerLevel - 1) * 10 + (levelPointsHp * 10 || 0));\r\n      setGameOver(false);\r\n      setLoading(true);\r\n      setMessage('Restarted at the beginning of Floor ' + floor + '.');\r\n      setTimeout(startBattle, 500);\r\n      return;\r\n    }\r\n    if (answer.trim().toLowerCase() === question.answer.toLowerCase()) {\r\n      // Correct: damage enemy\r\n      const damage = isBoss ? playerAttack + (levelPointsAtk * 5 || 0) : playerAttack + (levelPointsAtk * 5 || 0);\r\n      const newEnemyHealth = Math.max(0, enemyHealth - damage);\r\n      setEnemyHealth(newEnemyHealth);\r\n      setMessage('Correct! You dealt ' + damage + ' damage.');\r\n      setScore(score + question.points);\r\n      if (newEnemyHealth <= 0) {\r\n        let expGain = isBoss ? 150 : 70;\r\n        setPlayerExp(prev => prev + expGain);\r\n        setDefeatedTotal(prev => prev + 1);\r\n        if (opponentCount % 10 === 0) {\r\n          setFloor(floor + 1);\r\n          setOpponentCount(1);\r\n        } else {\r\n          setOpponentCount(opponentCount + 1);\r\n        }\r\n      } else {\r\n        startBattle();\r\n      }\r\n    } else {\r\n      // Incorrect: damage player\r\n      const damage = enemyDps;\r\n      const newPlayerHealth = Math.max(0, playerHealth - damage);\r\n      setPlayerHealth(newPlayerHealth);\r\n      setMessage('Wrong! You took ' + damage + ' damage.');\r\n      if (newPlayerHealth <= 0) {\r\n        setGameOver(true);\r\n        setMessage('Game Over! Final Score: ' + score + ' | Level: ' + playerLevel);\r\n      }\r\n    }\r\n    setAnswer('');\r\n  }\r\n\r\n  // Level up logic and point allocation\r\n  useEffect(() => {\r\n    if (playerExp >= expToNext) {\r\n      setPlayerLevel(playerLevel + 1);\r\n      setPlayerExp(playerExp - expToNext);\r\n      setExpToNext(Math.floor(expToNext * 1.35));\r\n      setLevelPoints(prev => prev + 2);\r\n      setShowPointAlloc(true);\r\n      // Add trait every 10 levels\r\n      if ((playerLevel + 1) % 10 === 0) {\r\n        const traitList = [\r\n          'Regeneration: Heal 10 HP after each battle',\r\n          'Critical Strike: +10 Attack vs Bosses',\r\n          'Shield: Take 10 less damage from enemies',\r\n          'Quick Learner: +20% EXP gain',\r\n          'Lucky: 10% chance to avoid damage',\r\n          'Resilience: Survive with 1 HP once per floor',\r\n          'Focus: +5 seconds to answer timer',\r\n          'Power Surge: +20 Attack for next 3 battles'\r\n        ];\r\n        const newTrait = traitList[Math.floor(Math.random() * traitList.length)];\r\n        setTraits(prev => [...prev, newTrait]);\r\n        setMessage('Special Trait Unlocked: ' + newTrait);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [playerExp]);\r\n\r\n  function allocatePoint(stat) {\r\n    if (levelPoints > 0) {\r\n      if (stat === 'hp') {\r\n        setLevelPointsHp(prev => prev + 1);\r\n      } else if (stat === 'atk') {\r\n        setLevelPointsAtk(prev => prev + 1);\r\n        setPlayerAttack(prev => prev + 5);\r\n      }\r\n      setLevelPoints(prev => prev - 1);\r\n      if (levelPoints - 1 === 0) setShowPointAlloc(false);\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"combat-new-loading\">\r\n        <div className=\"combat-new-spinner\"></div>\r\n        <p>Loading new battle...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"combat-new-root\">\r\n      <div className=\"combat-new-main-card\">\r\n        <div className=\"combat-new-enemy-section\">\r\n          <div className=\"combat-new-enemy-img\">{enemy.emoji}</div>\r\n          <div className=\"combat-new-enemy-name\">{enemy.name}</div>\r\n          <div className=\"combat-new-enemy-flavor\">{enemy.flavor}</div>\r\n          <div className=\"combat-new-health-bar enemy\">\r\n            <div className=\"combat-new-health-inner\" style={{width: `${(enemyHealth / (enemy.health || 1)) * 100}%`}}></div>\r\n            <span>{enemyHealth} / {enemy.health}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"combat-new-vs\">VS</div>\r\n        <div className=\"combat-new-player-section\">\r\n          <div className=\"combat-new-player-img\">🧑‍🎓</div>\r\n          <div className=\"combat-new-player-label\">You</div>\r\n          <div className=\"combat-new-health-bar player\">\r\n            <div className=\"combat-new-health-inner\" style={{width: `${playerHealth}%`}}></div>\r\n            <span>{playerHealth} / {100 + (playerLevel - 1) * 10 + (levelPointsHp * 10 || 0)}</span>\r\n          </div>\r\n          <div style={{marginTop: '0.7rem', fontWeight: 600, color: '#1b6ca8'}}>Level {playerLevel}</div>\r\n          <div style={{width: '100%', background: '#e0e0e0', borderRadius: '1rem', height: '0.8rem', marginTop: '0.3rem', position: 'relative'}}>\r\n            <div style={{height: '100%', borderRadius: '1rem', background: 'linear-gradient(90deg,#6c63ff,#43cea2)', width: `${(playerExp/expToNext)*100}%`, transition: 'width 0.5s'}}></div>\r\n            <span style={{position:'absolute',right:'0.7rem',top:'-1.1rem',fontSize:'0.85rem',color:'#333'}}>EXP: {playerExp} / {expToNext}</span>\r\n          </div>\r\n          <div style={{marginTop:'0.5rem',fontWeight:500}}>Attack: {playerAttack + (levelPointsAtk * 5 || 0)}</div>\r\n          <div style={{marginTop:'0.2rem',fontWeight:500}}>Unspent Points: {levelPoints}</div>\r\n          {traits.length > 0 && (\r\n            <div style={{marginTop:'0.5rem',fontWeight:500, color:'#7c3aed'}}>\r\n              Traits: {traits.join(', ')}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {showPointAlloc && (\r\n        <div className=\"combat-new-point-alloc\">\r\n          <span>Level Up! Allocate your points:</span>\r\n          <button onClick={() => allocatePoint('hp')} disabled={levelPoints === 0}>+10 Max HP</button>\r\n          <button onClick={() => allocatePoint('atk')} disabled={levelPoints === 0}>+5 Attack</button>\r\n        </div>\r\n      )}\r\n      <div className=\"combat-new-question-card\">\r\n        <div className=\"combat-new-question\">{question.text}</div>\r\n        <div style={{fontSize:'0.9rem',color:'#e53e3e',marginBottom:'0.3rem'}}>\r\n          {timeLeft > 0 ? `Time left: ${Math.ceil(timeLeft)}s` : ''}\r\n        </div>\r\n        <form className=\"combat-new-answer-form\" onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"combat-new-answer-input\"\r\n            type=\"text\"\r\n            value={answer}\r\n            onChange={e => setAnswer(e.target.value)}\r\n            placeholder=\"Type your answer...\"\r\n            disabled={gameOver}\r\n            autoFocus\r\n          />\r\n          <button className=\"combat-new-action-btn\" type=\"submit\" disabled={gameOver && !loading}>\r\n            {gameOver ? 'Restart' : isBoss ? 'Fight Boss' : 'Attack'}\r\n          </button>\r\n        </form>\r\n        {message && <div className=\"combat-new-message\">{message}</div>}\r\n      </div>\r\n      <div className=\"combat-new-footer\">\r\n        <span>Floor: {floor}</span>\r\n        <span>Defeated: {defeatedTotal}</span>\r\n        <span>Score: {score}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Combat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}