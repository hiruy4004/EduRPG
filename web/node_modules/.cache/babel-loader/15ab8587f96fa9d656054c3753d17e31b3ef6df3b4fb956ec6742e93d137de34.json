{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = \"https://fcwnxnemszouhbunmkpv.supabase.co\";\nconst supabaseAnonKey = \"process.env.REACT_APP_SUPABASE_ANON_KEY\";\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Questions table operations\nexport async function getQuestionsByDifficulty(difficulty) {\n  const {\n    data,\n    error\n  } = await supabase.from('questions').select('*').eq('difficulty', difficulty);\n  if (error) {\n    console.error('Error fetching questions:', error);\n    return [];\n  }\n  return data;\n}\nexport async function addQuestion(question) {\n  const {\n    data,\n    error\n  } = await supabase.from('questions').insert([question]);\n  if (error) {\n    console.error('Error adding question:', error);\n    return null;\n  }\n  return data;\n}","map":{"version":3,"names":["createClient","supabaseUrl","supabaseAnonKey","Error","supabase","getQuestionsByDifficulty","difficulty","data","error","from","select","eq","console","addQuestion","question","insert"],"sources":["C:/Users/hp/Desktop/New folder/web/src/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = \"https://fcwnxnemszouhbunmkpv.supabase.co\";\r\nconst supabaseAnonKey = \"process.env.REACT_APP_SUPABASE_ANON_KEY\";\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error('Missing Supabase environment variables');\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n\r\n// Questions table operations\r\nexport async function getQuestionsByDifficulty(difficulty) {\r\n  const { data, error } = await supabase\r\n    .from('questions')\r\n    .select('*')\r\n    .eq('difficulty', difficulty);\r\n  \r\n  if (error) {\r\n    console.error('Error fetching questions:', error);\r\n    return [];\r\n  }\r\n  return data;\r\n}\r\n\r\nexport async function addQuestion(question) {\r\n  const { data, error } = await supabase\r\n    .from('questions')\r\n    .insert([question]);\r\n\r\n  if (error) {\r\n    console.error('Error adding question:', error);\r\n    return null;\r\n  }\r\n  return data;\r\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,eAAe,GAAG,yCAAyC;AAEjE,IAAI,CAACD,WAAW,IAAI,CAACC,eAAe,EAAE;EACpC,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;AAC3D;AAEA,OAAO,MAAMC,QAAQ,GAAGJ,YAAY,CAACC,WAAW,EAAEC,eAAe,CAAC;;AAElE;AACA,OAAO,eAAeG,wBAAwBA,CAACC,UAAU,EAAE;EACzD,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMJ,QAAQ,CACnCK,IAAI,CAAC,WAAW,CAAC,CACjBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,YAAY,EAAEL,UAAU,CAAC;EAE/B,IAAIE,KAAK,EAAE;IACTI,OAAO,CAACJ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO,EAAE;EACX;EACA,OAAOD,IAAI;AACb;AAEA,OAAO,eAAeM,WAAWA,CAACC,QAAQ,EAAE;EAC1C,MAAM;IAAEP,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMJ,QAAQ,CACnCK,IAAI,CAAC,WAAW,CAAC,CACjBM,MAAM,CAAC,CAACD,QAAQ,CAAC,CAAC;EAErB,IAAIN,KAAK,EAAE;IACTI,OAAO,CAACJ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,IAAI;EACb;EACA,OAAOD,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}